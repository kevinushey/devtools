## CMakeLists.txt automatically generated by devtools::use_cmake()
cmake_minimum_required(VERSION 3.0 FATAL_ERROR)
project(devtools)
file(GLOB_RECURSE DEVTOOLS_SOURCES
    src/*.cpp
    src/*.c
)
file(GLOB_RECURSE DEVTOOLS_HEADERS
    src/*.hpp
    src/*.h
    inst/include/*.hpp
    inst/include/*.h
)
## Used for an 'all' target so IDEs will index _all_ files in a project
## even if they aren't actually used for the package build
file(GLOB_RECURSE ALL_FILES
    *
)
file(GLOB_RECURSE DEVTOOLS_R
    R/*
)
file(GLOB_RECURSE DEVTOOLS_MAN
    man/*
)
file(GLOB_RECURSE DEVTOOLS_TESTS
    tests/*
)
file(GLOB_RECURSE DEVTOOLS_VIGNETTES
    vignettes/*
)
file(GLOB_RECURSE DEVTOOLS_INST
    inst/*
)
add_definitions(
    -DNDEBUG
)
add_library(devtools SHARED
    ${DEVTOOLS_SOURCES}
    ${DEVTOOLS_HEADERS}
)
add_library(devtools-all SHARED EXCLUDE_FROM_ALL
    ${ALL_FILES}
)
add_custom_target(pkg
    COMMAND R CMD INSTALL --preclean ${CMAKE_BINARY_DIR}/..
    WORKING_DIRECTORY $ENV{TMPDIR}
)

if (UNIX)
  
endif()

if (WIN32)
  
endif()

if (APPLE)
  ## Main directives -- thes may need to be updated manually if
  ## you are making use of libraries not declared in the DESCRIPTION
  include_directories(
      /Library/Frameworks/R.framework/Resources/include
      inst/include
      /usr/local/include
      /usr/include
  )
  target_link_libraries(devtools
      /Library/Frameworks/R.framework/Resources/lib/libR.dylib
  )
  add_compile_options(
      -fPIC
      -g
      -O3
      -Wall
  )
  set(CMAKE_EXE_LINKER_FLAGS
      -dynamiclib
      -Wl,-headerpad_max_install_names
      -undefined dynamic_lookup
      -single_module
      -multiply_defined suppress
      -Wl,CoreFoundation
  )
endif()
